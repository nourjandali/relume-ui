{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ui-components",
  "type": "registry:component",
  "files": [
    {
      "type": "registry:file",
      "path": "registry/ui/button.tsx",
      "target": "components/ui/button.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Slot, Slottable } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"rounded-button inline-flex gap-3 items-center justify-center whitespace-nowrap transition-all duration-200 ease-in-out disabled:pointer-events-none disabled:opacity-50 focus-visible:outline-none\",\n  {\n    variants: {\n      variant: {\n        primary: \"border border-border-primary bg-background-alternative text-text-alternative\",\n        secondary: \"border border-border-primary text-text-primary bg-background-primary\",\n        \"secondary-alt\": \"border border-border-alternative text-text-alternative\",\n        tertiary: \"text-text-primary\",\n        link: \"border-0 text-text-primary gap-2 bg-transparent\",\n        \"link-alt\": \"border-0 text-text-alternative gap-2\",\n        ghost: \"hover:bg-background-alternative hover:text-text-alternative\",\n      },\n      size: {\n        primary: \"px-6 py-3\",\n        sm: \"px-5 py-2\",\n        link: \"p-0\",\n        icon: \"size-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"primary\",\n      size: \"primary\",\n    },\n  },\n);\n\ntype CustomProps = {\n  iconLeft?: React.ReactNode;\n  iconRight?: React.ReactNode;\n  asChild?: boolean;\n};\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    CustomProps,\n    VariantProps<typeof buttonVariants> {}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      iconLeft,\n      iconRight,\n      children,\n      asChild = false,\n      ...props\n    },\n    ref,\n  ) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(\n          buttonVariants({\n            variant,\n            size,\n            className,\n          }),\n        )}\n        ref={ref}\n        {...props}\n      >\n        {iconLeft && iconLeft}\n        <Slottable>{children}</Slottable>\n        {iconRight && iconRight}\n      </Comp>\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };"
    },
    {
      "type": "registry:file",
      "path": "registry/ui/card.tsx",
      "target": "components/ui/card.tsx",
      "content": "import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nconst cardVariants = cva(\"overflow-hidden rounded-card\", {\n  variants: {\n    variant: {\n      primary: \"border border-border-primary bg-background-primary text-text-primary\",\n      transparent: \"border border-border-alternative bg-transparent text-text-alternative\",\n    },\n  },\n  defaultVariants: {\n    variant: \"primary\",\n  },\n});\n\nexport interface CardProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof cardVariants> {}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  (\n    {\n      className,\n      variant,\n      ...props\n    },\n    ref,\n  ) => (\n    <div\n      ref={ref}\n      className={cn(\n        cardVariants({\n          variant,\n          className,\n        }),\n      )}\n      {...props}\n    />\n  ),\n);\nCard.displayName = \"Card\";\n\nconst BackgroundCard = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"rounded-card overflow-hidden\", className)} {...props} />\n  ),\n);\nBackgroundCard.displayName = \"BackgroundCard\";\n\nexport { Card, BackgroundCard };"
    },
    {
      "type": "registry:file",
      "path": "registry/ui/badge.tsx",
      "target": "components/ui/badge.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-badge px-2 py-1 text-sm font-semibold focus:outline-none\",\n  {\n    variants: {\n      variant: {\n        default: \"border border-transparent bg-background-secondary text-text-primary\",\n        outline: \"border border-border-primary text-text-primary\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div\n      className={cn(\n        badgeVariants({\n          variant,\n        }),\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Badge, badgeVariants };"
    },
    {
      "type": "registry:file",
      "path": "lib/utils.ts",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"
    },
    {
      "type": "registry:file",
      "path": "app/globals.css",
      "target": "app/globals.css",
      "content": "@import \"tailwindcss\";\n@plugin \"tailwindcss-animate\"; \n\n@layer base {\n  body {\n    font-family:\n      system-ui,\n      -apple-system,\n      BlinkMacSystemFont,\n      \"Segoe UI\",\n      Roboto,\n      Oxygen,\n      Ubuntu,\n      Cantarell,\n      \"Open Sans\",\n      \"Helvetica Neue\",\n      sans-serif;\n  }\n\n  button:not(:disabled),\n  [role=\"button\"]:not(:disabled) {\n    cursor: pointer;\n  }\n}\n\n@utility container {\n  margin-inline: auto;\n  max-width: var(--container-xxl);\n}\n\n@utility no-scrollbar {\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n}\n\n@theme {\n  /* ────────── BREAKPOINTS ────────── */\n  --breakpoint-*: initial;\n  --breakpoint-sm: 480px;\n  --breakpoint-md: 768px;\n  --breakpoint-lg: 992px;\n  --breakpoint-xl: 1280px;\n  --breakpoint-xxl: 1440px;\n\n  /* ────────── CONTAINERS ────────── */\n  --container-*: initial;\n  --container-xxs: 20rem;\n  --container-xs: 25rem;\n  --container-sm: 30rem;\n  --container-md: 35rem;\n  --container-lg: 48rem;\n  --container-xl: 64rem;\n  --container-xxl: 80rem;\n\n  /* ────────── MAX WIDTHS ────────── */\n  --max-w-xxs: var(--container-xxs);\n  --max-w-xs: var(--container-xs);\n  --max-w-sm: var(--container-sm);\n  --max-w-md: var(--container-md);\n  --max-w-lg: var(--container-lg);\n  --max-w-xl: var(--container-xl);\n  --max-w-xxl: var(--container-xxl);\n\n  /* ────────── SPACING ────────── */\n  --spacing-18: 4.5rem;\n  --spacing-30: 7.5rem;\n\n  /* ────────── COLORS ────────── */\n  --color-brand-black: #000000;\n  --color-brand-white: #ffffff;\n\n  --color-neutral: #666666;\n  --color-neutral-black: #000000;\n  --color-neutral-white: #ffffff;\n  --color-neutral-lightest: #eeeeee;\n  --color-neutral-lighter: #cccccc;\n  --color-neutral-light: #aaaaaa;\n  --color-neutral-dark: #444444;\n  --color-neutral-darker: #222222;\n  --color-neutral-darkest: #111111;\n\n  --color-system-success-green: #027a48;\n  --color-system-success-green-light: #ecfdf3;\n  --color-system-error-red: #b42318;\n  --color-system-error-red-light: #fef3f2;\n\n  --color-background: #ffffff;\n  --color-background-primary: #ffffff;\n  --color-background-secondary: #eeeeee;\n  --color-background-tertiary: #666666;\n  --color-background-alternative: #000000;\n  --color-background-success: #ecfdf3;\n  --color-background-error: #fef3f2;\n\n  --color-border: #000000;\n  --color-border-primary: #000000;\n  --color-border-secondary: #aaaaaa;\n  --color-border-tertiary: #444444;\n  --color-border-alternative: #ffffff;\n  --color-border-success: #027a48;\n  --color-border-error: #b42318;\n\n  --color-text: #000000;\n  --color-text-primary: #000000;\n  --color-text-secondary: #aaaaaa;\n  --color-text-alternative: #ffffff;\n  --color-text-success: #027a48;\n  --color-text-error: #b42318;\n\n  --color-link: #000000;\n  --color-link-primary: #000000;\n  --color-link-secondary: #666666;\n  --color-link-alternative: #ffffff;\n\n  /* ────────── FONT SIZES ────────── */\n  --text-*: initial;\n  --text-xs: 0.75rem;\n  --text-xs--line-height: 1.5;\n  --text-sm: 0.875rem;\n  --text-sm--line-height: 1.5;\n  --text-base: 1rem;\n  --text-base--line-height: 1.5;\n  --text-md: 1.125rem;\n  --text-md--line-height: 1.5;\n  --text-lg: 1.25rem;\n  --text-lg--line-height: 1.5;\n  --text-xl: 1.25rem;\n  --text-xl--line-height: 1.4;\n  --text-2xl: 1.5rem;\n  --text-2xl--line-height: 1.4;\n  --text-3xl: 1.75rem;\n  --text-3xl--line-height: 1.4;\n  --text-4xl: 2rem;\n  --text-4xl--line-height: 1.3;\n  --text-5xl: 2.25rem;\n  --text-5xl--line-height: 1.2;\n  --text-6xl: 2.5rem;\n  --text-6xl--line-height: 1.2;\n  --text-7xl: 2.75rem;\n  --text-7xl--line-height: 1.2;\n  --text-8xl: 3rem;\n  --text-8xl--line-height: 1.2;\n  --text-9xl: 3.25rem;\n  --text-9xl--line-height: 1.2;\n  --text-10xl: 3.5rem;\n  --text-10xl--line-height: 1.2;\n\n  /* ────────── KEYFRAMES ────────── */\n  @keyframes accordion-down { from { height: 0px; } to { height: var(--radix-accordion-content-height); } }\n  @keyframes accordion-up { from { height: var(--radix-accordion-content-height); } to { height: 0px; } }\n  @keyframes loop-horizontally { from { transform: translateX(0); } to { transform: translateX(-100%); } }\n  @keyframes loop-testimonials { from { transform: translateX(0); } to { transform: translateX(-135rem); } }\n  @keyframes loop-vertically { from { transform: translateY(0); } to { transform: translateY(-50%); } }\n  @keyframes loop-vertically-top { from { transform: translateY(0); } to { transform: translateY(-50%); } }\n  @keyframes loop-vertically-bottom { from { transform: translateY(-50%); } to { transform: translateY(0); } }\n  @keyframes marquee-horizontally { from { transform: translateX(0); } to { transform: translateX(-50%); } }\n  @keyframes marquee-top { from { transform: translateX(0); } to { transform: translateX(-50%); } }\n  @keyframes marquee-right { from { transform: translateX(0); } to { transform: translateX(100%); } }\n  @keyframes marquee-bottom { from { transform: translateX(-50%); } to { transform: translateX(0%); } }\n  @keyframes marquee-left { from { transform: translateX(100%); } to { transform: translateX(0); } }\n  @keyframes tabs { 0% { opacity: 0; } 100% { opacity: 1; } }\n\n  /* ────────── ANIMATIONS ────────── */\n  --animate-accordion-down: accordion-down 0.2s ease-out;\n  --animate-accordion-up: accordion-up 0.2s ease-out;\n  --animate-loop-horizontally: loop-horizontally 20s linear infinite;\n  --animate-loop-testimonials: loop-testimonials 30s linear infinite;\n  --animate-loop-vertically: loop-vertically 30s linear infinite;\n  --animate-loop-vertically-top: loop-vertically-top 50s linear infinite;\n  --animate-loop-vertically-bottom: loop-vertically-bottom 50s linear infinite;\n  --animate-marquee-horizontally: marquee-top 30s linear infinite;\n  --animate-marquee-top: marquee-top 50s linear infinite;\n  --animate-marquee-right: marquee-right 25s linear infinite;\n  --animate-marquee-bottom: marquee-bottom 50s linear infinite;\n  --animate-marquee-left: marquee-left 25s linear infinite;\n  --animate-tabs: tabs 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;\n}"
    }
  ]
}
