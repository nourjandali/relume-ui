{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "relume-ui",
  "type": "registry:block",
  "title": "Relume UI",
  "description": "A collection of Relume UI components, blocks, and styles with CSS.",
  "dependencies": [
    "@radix-ui/react-slot",
    "@radix-ui/react-dropdown-menu",
    "embla-carousel-react",
    "react-icons",
    "react",
    "framer-motion",
    "clsx",
    "embla-carousel-autoplay"
  ],
  "files": [
    {
      "path": "registry/components/header1.tsx",
      "content": "import { Button } from \"@/components/ui/button\";\nimport type { ButtonProps } from \"@/components/ui/button\";\n\ntype ImageProps = {\n  src: string;\n  alt?: string;\n};\n\ntype Props = {\n  heading: string;\n  description: string;\n  buttons: ButtonProps[];\n  image: ImageProps;\n};\n\nexport type Header1Props = React.ComponentPropsWithoutRef<\"section\"> &\n  Partial<Props>;\n\nexport const Header1 = (props: Header1Props) => {\n  const { heading, description, buttons, image } = {\n    ...Header1Defaults,\n    ...props,\n  };\n  return (\n    <section id=\"relume\" className=\"px-[5%] py-16 md:py-24 lg:py-28\">\n      <div className=\"container\">\n        <div className=\"grid grid-cols-1 gap-x-20 gap-y-12 md:gap-y-16 lg:grid-cols-2 lg:items-center\">\n          <div>\n            <h1 className=\"mb-5 text-6xl font-bold md:mb-6 md:text-9xl lg:text-10xl\">\n              {heading}\n            </h1>\n            <p className=\"md:text-md\">{description}</p>\n            <div className=\"mt-6 flex flex-wrap gap-4 md:mt-8\">\n              {buttons.map((button, index) => (\n                <Button key={index} {...button}>\n                  {button.title}\n                </Button>\n              ))}\n            </div>\n          </div>\n          <div>\n            <img\n              src={image.src}\n              className=\"w-full rounded-image object-cover\"\n              alt={image.alt}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport const Header1Defaults: Props = {\n  heading: \"Medium length hero heading goes here\",\n  description:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse varius enim in eros elementum tristique. Duis cursus, mi quis viverra ornare, eros dolor interdum nulla, ut commodo diam libero vitae erat.\",\n  buttons: [{ title: \"Button\" }, { title: \"Button\", variant: \"secondary\" }],\n  image: {\n    src: \"https://d22po4pjz3o32e.cloudfront.net/placeholder-image.svg\",\n    alt: \"Relume placeholder image\",\n  },\n};\n\nHeader1.displayName = \"Header1\";\n",
      "type": "registry:component"
    },
    {
      "path": "registry/components/layout1.tsx",
      "content": "import { Button } from \"@/components/ui/button\";\nimport { type ButtonProps } from \"@/components/ui/button\";\nimport { RxChevronRight } from \"react-icons/rx\";\n\ntype ImageProps = {\n  src: string;\n  alt?: string;\n};\n\ntype Props = {\n  tagline: string;\n  heading: string;\n  description: string;\n  buttons: ButtonProps[];\n  image: ImageProps;\n};\n\nexport type Layout1Props = React.ComponentPropsWithoutRef<\"section\"> &\n  Partial<Props>;\n\nexport const Layout1 = (props: Layout1Props) => {\n  const { tagline, heading, description, buttons, image } = {\n    ...Layout1Defaults,\n    ...props,\n  };\n  return (\n    <section id=\"relume\" className=\"px-[5%] py-16 md:py-24 lg:py-28\">\n      <div className=\"container\">\n        <div className=\"grid grid-cols-1 gap-y-12 md:grid-cols-2 md:items-center md:gap-x-12 lg:gap-x-20\">\n          <div>\n            <p className=\"mb-3 font-semibold md:mb-4\">{tagline}</p>\n            <h1 className=\"rb-5 mb-5 text-5xl font-bold md:mb-6 md:text-7xl lg:text-8xl\">\n              {heading}\n            </h1>\n            <p className=\"md:text-md\">{description}</p>\n            <div className=\"mt-6 flex flex-wrap items-center gap-4 md:mt-8\">\n              {buttons.map((button, index) => (\n                <Button key={index} {...button}>\n                  {button.title}\n                </Button>\n              ))}\n            </div>\n          </div>\n          <div>\n            <img\n              src={image.src}\n              className=\"w-full rounded-image object-cover\"\n              alt={image.alt}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport const Layout1Defaults: Props = {\n  tagline: \"Tagline\",\n  heading: \"Medium length section heading goes here\",\n  description:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse varius enim in eros elementum tristique. Duis cursus, mi quis viverra ornare, eros dolor interdum nulla, ut commodo diam libero vitae erat.\",\n  buttons: [\n    { title: \"Button\", variant: \"secondary\" },\n    {\n      title: \"Button\",\n      variant: \"link\",\n      size: \"link\",\n      iconRight: <RxChevronRight />,\n    },\n  ],\n  image: {\n    src: \"https://d22po4pjz3o32e.cloudfront.net/placeholder-image.svg\",\n    alt: \"Relume placeholder image\",\n  },\n};\n\nLayout1.displayName = \"Layout1\";\n",
      "type": "registry:component"
    },
    {
      "path": "registry/components/application-shell1.tsx",
      "content": "\"use client\";\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { RxChevronDown, RxChevronRight, RxCross2 } from \"react-icons/rx\";\nimport { BiBell, BiSearch } from \"react-icons/bi\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { useMediaQuery } from \"@/hooks/use-media-query\";\n\ntype ImageProps = {\n  url?: string;\n  src: string;\n  alt?: string;\n};\n\ntype NavLink = {\n  url: string;\n  title: string;\n  subMenuLinks?: NavLink[];\n};\n\ntype Props = {\n  logo: ImageProps;\n  navLinks: NavLink[];\n};\n\nexport type ApplicationShell1Props = React.ComponentPropsWithoutRef<\"section\"> &\n  Partial<Props>;\n\nexport const ApplicationShell1 = (props: ApplicationShell1Props) => {\n  const { logo, navLinks } = {\n    ...ApplicationShell1Defaults,\n    ...props,\n  };\n\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isSearchIconClicked, setIsSearchIconClicked] =\n    useState<boolean>(false);\n  const searchBarRef = useRef<HTMLDivElement>(null);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const isMobile = useMediaQuery(\"(max-width: 991px)\");\n  useEffect(() => {\n    if (!isSearchIconClicked) {\n      return;\n    }\n    const handleClickOutside = (event: PointerEvent) => {\n      if (\n        searchBarRef.current &&\n        !searchBarRef.current.contains(event.target as Node)\n      ) {\n        setIsSearchIconClicked(false);\n      }\n    };\n    document.addEventListener(\"pointerdown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"pointerdown\", handleClickOutside);\n    };\n  }, [isSearchIconClicked]);\n\n  useEffect(() => {\n    if (!menuRef) {\n      return;\n    }\n    const handleClickOutside = (event: PointerEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        setIsMobileMenuOpen(false);\n      }\n    };\n    document.addEventListener(\"pointerdown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"pointerdown\", handleClickOutside);\n    };\n  }, [isSearchIconClicked]);\n\n  return (\n    <section id=\"relume\">\n      <div className=\"sticky top-0 z-40 flex w-full flex-wrap items-center justify-between border-b border-scheme-1-border bg-scheme-1-background px-6 lg:px-8\">\n        <div className=\"flex min-h-16 items-center md:min-h-18\">\n          <button\n            className=\"mr-4 -ml-4 flex size-12 flex-col items-center justify-center lg:hidden\"\n            onPointerDown={(e) => e.stopPropagation()}\n            onClick={() => {\n              setIsMobileMenuOpen(!isMobileMenuOpen);\n              setIsSearchIconClicked(false);\n            }}\n          >\n            <motion.span\n              className=\"my-[3px] h-0.5 w-6 bg-neutral-darkest\"\n              animate={isMobileMenuOpen ? [\"open\", \"rotatePhase\"] : \"closed\"}\n              variants={topLineVariants}\n            />\n            <motion.span\n              className=\"my-[3px] h-0.5 w-6 bg-neutral-darkest\"\n              animate={isMobileMenuOpen ? \"open\" : \"closed\"}\n              variants={middleLineVariants}\n            />\n            <motion.span\n              className=\"my-[3px] h-0.5 w-6 bg-neutral-darkest\"\n              animate={isMobileMenuOpen ? [\"open\", \"rotatePhase\"] : \"closed\"}\n              variants={bottomLineVariants}\n            />\n          </button>\n          <a href={logo.url}>\n            <img src={logo.src} alt={logo.alt} />\n          </a>\n        </div>\n        <div className=\"ml-auto flex flex-row items-center gap-4 lg:order-last\">\n          <div className=\"hidden w-full max-w-md lg:block\">\n            <Input\n              className=\"w-full\"\n              placeholder=\"Search\"\n              icon={<BiSearch className=\"size-6\" />}\n            />\n          </div>\n          <div className=\"flex shrink-0 items-center gap-2 md:gap-4\">\n            <button\n              onPointerDown={(e) => e.stopPropagation()}\n              onClick={() => {\n                setIsMobileMenuOpen(false);\n                setIsSearchIconClicked(!isSearchIconClicked);\n              }}\n              className=\"p-2 lg:hidden\"\n            >\n              <BiSearch className=\"size-6\" />\n            </button>\n            <AnimatePresence>\n              {isSearchIconClicked && (\n                <motion.div\n                  ref={searchBarRef}\n                  variants={{\n                    visible: { opacity: 1 },\n                    hidden: { opacity: 0 },\n                  }}\n                  initial=\"hidden\"\n                  exit=\"hidden\"\n                  animate={isSearchIconClicked ? \"visible\" : \"hidden\"}\n                  className=\"absolute top-16 right-0 bottom-0 left-0 mt-px flex h-16 max-w-md items-center justify-center border-b border-scheme-1-border bg-white px-6 lg:hidden\"\n                >\n                  <Input\n                    className=\"h-fit w-full\"\n                    placeholder=\"Search\"\n                    icon={<BiSearch className=\"size-6\" />}\n                  />\n                  <button\n                    onClick={() => setIsSearchIconClicked(!isSearchIconClicked)}\n                  >\n                    <RxCross2 className=\"ml-4 size-6\" />\n                  </button>\n                </motion.div>\n              )}\n            </AnimatePresence>\n            <DropdownMenu>\n              <DropdownMenuTrigger className=\"relative\">\n                <div className=\"absolute top-2 right-2 bottom-auto left-auto size-2 rounded-full bg-neutral-darkest outline-[3px] outline-offset-0 outline-white\" />\n                <BiBell className=\"size-6\" />\n              </DropdownMenuTrigger>\n              <DropdownMenuContent\n                className=\"max-w-[19rem] px-0\"\n                align=\"end\"\n                sideOffset={0}\n              >\n                <div className=\"flex flex-col\">\n                  <div className=\"flex items-center justify-between px-4 py-2\">\n                    <DropdownMenuLabel className=\"p-0\">\n                      Notifications\n                    </DropdownMenuLabel>\n                    <a href=\"#\">Mark as read</a>\n                  </div>\n                  <DropdownMenuSeparator />\n                  <div className=\"h-full max-h-[14rem] overflow-auto px-2 py-1\">\n                    <DropdownMenuItem className=\"mt-2 grid grid-cols-[max-content_1fr] gap-2 px-2 py-1\">\n                      <div className=\"flex size-full flex-col items-start justify-start\">\n                        <img\n                          src=\"https://d22po4pjz3o32e.cloudfront.net/relume-icon.svg\"\n                          alt=\"Avatar\"\n                          className=\"size-6\"\n                        />\n                      </div>\n                      <div>\n                        <p>\n                          Lorem ipsum dolor sit amet, consectetur adipiscing\n                          elit.\n                        </p>\n                        <p className=\"mt-2 text-sm\">11 Jan 2022</p>\n                      </div>\n                    </DropdownMenuItem>\n                    <DropdownMenuItem className=\"mt-2 grid grid-cols-[max-content_1fr] gap-2 px-2 py-1\">\n                      <div className=\"flex size-full flex-col items-start justify-start\">\n                        <img\n                          src=\"https://d22po4pjz3o32e.cloudfront.net/relume-icon.svg\"\n                          alt=\"Avatar\"\n                          className=\"size-6\"\n                        />\n                      </div>\n                      <div>\n                        <p>\n                          Lorem ipsum dolor sit amet, consectetur adipiscing\n                          elit.\n                        </p>\n                        <p className=\"mt-2 text-sm\">11 Jan 2022</p>\n                      </div>\n                    </DropdownMenuItem>\n                  </div>\n                </div>\n                <DropdownMenuSeparator />\n                <div className=\"flex w-full items-end justify-end px-4 py-2\">\n                  <Button\n                    variant=\"link\"\n                    size=\"link\"\n                    iconRight={<RxChevronRight />}\n                    asChild\n                  >\n                    <a href=\"#\">View All</a>\n                  </Button>\n                </div>\n              </DropdownMenuContent>\n            </DropdownMenu>\n            <DropdownMenu>\n              <DropdownMenuTrigger className=\"flex items-center p-0\">\n                <img\n                  src=\"https://d22po4pjz3o32e.cloudfront.net/placeholder-image.svg\"\n                  alt=\"Avatar\"\n                  className=\"size-10 rounded-full object-cover\"\n                />\n              </DropdownMenuTrigger>\n              <DropdownMenuContent\n                align=\"end\"\n                sideOffset={0}\n                className=\"mt-1.5 min-w-32 px-0 py-2 md:min-w-48\"\n              >\n                <DropdownMenuGroup>\n                  <DropdownMenuItem>\n                    <a href=\"#\">My Profile</a>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem>\n                    <a href=\"#\">Profile Settings</a>\n                  </DropdownMenuItem>\n                  <DropdownMenuSeparator className=\"mx-4\" />\n                  <DropdownMenuItem>\n                    <a href=\"#\">Log Out</a>\n                  </DropdownMenuItem>\n                </DropdownMenuGroup>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </div>\n        </div>\n        <motion.div\n          ref={menuRef}\n          variants={{\n            open: {\n              height: \"var(--height-open, auto)\",\n            },\n            close: {\n              height: \"var(--height-closed, 0)\",\n            },\n          }}\n          initial=\"close\"\n          exit=\"close\"\n          animate={isMobileMenuOpen ? \"open\" : \"close\"}\n          transition={{ duration: 0.4 }}\n          className=\"w-full overflow-hidden lg:order-2 lg:ml-6 lg:w-auto lg:grow lg:[--height-closed:auto] lg:[--height-open:auto]\"\n        >\n          <div className=\"pt-4 pb-8 lg:flex lg:items-center lg:py-0\">\n            {navLinks.map((navLink, index) =>\n              navLink.subMenuLinks && navLink.subMenuLinks.length > 0 ? (\n                <SubMenu key={index} navLink={navLink} isMobile={isMobile} />\n              ) : (\n                <a\n                  key={index}\n                  href={navLink.url}\n                  className=\"block py-3 lg:px-4 lg:py-2\"\n                >\n                  {navLink.title}\n                </a>\n              )\n            )}\n          </div>\n        </motion.div>\n      </div>\n      <main className=\"flex-1 bg-scheme-1-foreground\">\n        <div className=\"border-b-2 border-dashed border-[#d3d3d3] py-6 text-center text-neutral-darkest/50\">\n          <h1>Click and paste Page Header</h1>\n        </div>\n        <div className=\"container px-6 py-8 md:px-8 md:py-10 lg:py-12\">\n          <div className=\"grid grid-cols-1 gap-12\">\n            <div className=\"flex h-screen items-center justify-center border-2 border-dashed border-[#d3d3d3] py-6 text-center text-neutral-darkest/50\">\n              <h2>Click and paste Main Content</h2>\n            </div>\n          </div>\n        </div>\n      </main>\n    </section>\n  );\n};\n\nconst SubMenu = ({\n  navLink,\n  isMobile,\n}: {\n  navLink: NavLink;\n  isMobile: boolean;\n}) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n  return (\n    <div\n      onMouseEnter={() => !isMobile && setIsDropdownOpen(true)}\n      onMouseLeave={() => !isMobile && setIsDropdownOpen(false)}\n    >\n      <button\n        className=\"flex w-full items-center justify-between gap-2 py-3 text-left lg:flex-none lg:justify-start lg:px-4 lg:py-2\"\n        onClick={() => setIsDropdownOpen((prev) => !prev)}\n      >\n        <span>{navLink.title}</span>\n        <motion.span\n          variants={{\n            rotated: { rotate: 180 },\n            initial: { rotate: 0 },\n          }}\n          animate={isDropdownOpen ? \"rotated\" : \"initial\"}\n          transition={{ duration: 0.3 }}\n        >\n          <RxChevronDown />\n        </motion.span>\n      </button>\n      {isDropdownOpen && (\n        <AnimatePresence>\n          <motion.nav\n            variants={{\n              open: {\n                visibility: \"visible\",\n                opacity: \"var(--opacity-open, 100%)\",\n                y: 0,\n              },\n              close: {\n                visibility: \"hidden\",\n                opacity: \"var(--opacity-close, 0)\",\n                y: \"var(--y-close, 0%)\",\n              },\n            }}\n            animate={isDropdownOpen ? \"open\" : \"close\"}\n            initial=\"close\"\n            exit=\"close\"\n            transition={{ duration: 0.2 }}\n            className=\"bg-scheme-1-background lg:absolute lg:z-50 lg:border lg:border-scheme-1-border lg:p-2 lg:[--y-close:25%]\"\n          >\n            {navLink.subMenuLinks?.map((navLink, index) => (\n              <a key={index} href={navLink.url} className=\"block px-4 py-2\">\n                {navLink.title}\n              </a>\n            ))}\n          </motion.nav>\n        </AnimatePresence>\n      )}\n    </div>\n  );\n};\n\nexport const ApplicationShell1Defaults: Props = {\n  logo: {\n    url: \"#\",\n    src: \"https://d22po4pjz3o32e.cloudfront.net/logo-image.svg\",\n    alt: \"Logo image\",\n  },\n  navLinks: [\n    { title: \"Link One\", url: \"#\" },\n    { title: \"Link Two\", url: \"#\" },\n    { title: \"Link Three\", url: \"#\" },\n    {\n      title: \"Link Four\",\n      url: \"#\",\n      subMenuLinks: [\n        { title: \"Link Five\", url: \"#\" },\n        { title: \"Link Six\", url: \"#\" },\n        { title: \"Link Seven\", url: \"#\" },\n      ],\n    },\n  ],\n};\n\nconst topLineVariants = {\n  open: {\n    translateY: 8,\n    transition: { delay: 0.1 },\n  },\n  rotatePhase: {\n    rotate: -45,\n    transition: { delay: 0.2 },\n  },\n  closed: {\n    translateY: 0,\n    rotate: 0,\n    transition: { duration: 0.2 },\n  },\n};\n\nconst middleLineVariants = {\n  open: {\n    width: 0,\n    transition: { duration: 0.1 },\n  },\n  closed: {\n    width: \"1.5rem\",\n    transition: { delay: 0.3, duration: 0.2 },\n  },\n};\n\nconst bottomLineVariants = {\n  open: {\n    translateY: -8,\n    transition: { delay: 0.1 },\n  },\n  rotatePhase: {\n    rotate: 45,\n    transition: { delay: 0.2 },\n  },\n  closed: {\n    translateY: 0,\n    rotate: 0,\n    transition: { duration: 0.2 },\n  },\n};\n\nApplicationShell1.displayName = \"ApplicationShell1\";\n",
      "type": "registry:component"
    },
    {
      "path": "registry/components/header102.tsx",
      "content": "\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport Autoplay from \"embla-carousel-autoplay\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselNext,\n  CarouselPrevious,\n} from \"@/components/ui/carousel\";\nimport { type CarouselApi } from \"@/components/ui/carousel\";\nimport { type ButtonProps } from \"@/components/ui/button\";\n\ntype ImageProps = {\n  src: string;\n  alt?: string;\n};\n\ntype Props = {\n  heading: string;\n  description: string;\n  buttons: ButtonProps[];\n  images: ImageProps[];\n  carouselHeading: string;\n  carouselDescription: string;\n};\n\nconst options = {\n  loop: true,\n};\n\nconst plugins = [\n  Autoplay({\n    delay: 5000,\n  }),\n];\n\nexport type Header102Props = React.ComponentPropsWithoutRef<\"section\"> &\n  Partial<Props>;\n\nexport const Header102 = (props: Header102Props) => {\n  const [api, setApi] = useState<CarouselApi>();\n  const [current, setCurrent] = useState(0);\n  const {\n    heading,\n    description,\n    buttons,\n    images,\n    carouselHeading,\n    carouselDescription,\n  } = {\n    ...Header102Defaults,\n    ...props,\n  };\n\n  useEffect(() => {\n    if (!api) {\n      return;\n    }\n    setCurrent(api.selectedScrollSnap() + 1);\n    api.on(\"select\", () => {\n      setCurrent(api.selectedScrollSnap() + 1);\n    });\n  }, [api]);\n\n  return (\n    <section\n      id=\"relume\"\n      className=\"grid grid-cols-1 items-center gap-y-16 overflow-hidden pt-16 sm:overflow-auto md:pt-24 lg:grid-cols-[50%_50%] lg:gap-y-0 lg:pt-0\"\n    >\n      <div className=\"mx-[5%] max-w-md justify-self-start lg:mr-20 lg:ml-[5vw] lg:justify-self-end\">\n        <h1 className=\"mb-5 text-6xl font-bold md:mb-6 md:text-9xl lg:text-10xl\">\n          {heading}\n        </h1>\n        <p className=\"md:text-md\">{description}</p>\n        <div className=\"mt-6 flex flex-wrap gap-4 md:mt-8\">\n          {buttons.map((button, index) => (\n            <Button key={index} {...button}>\n              {button.title}\n            </Button>\n          ))}\n        </div>\n      </div>\n      <div className=\"relative clear-both h-[300px] max-h-[60rem] min-h-screen w-full text-center\">\n        <Carousel\n          opts={options}\n          plugins={plugins}\n          setApi={setApi}\n          className=\"relative right-0 left-0 z-10 block h-full overflow-hidden pl-4 whitespace-nowrap\"\n        >\n          <CarouselContent>\n            {images.map((image, index) => (\n              <CarouselItem key={index} className=\"pl-0\">\n                <div className=\"relative inline-block size-full text-left align-top whitespace-normal\">\n                  <div className=\"flex h-screen flex-col\">\n                    <div className=\"relative flex-1\">\n                      <img\n                        className=\"absolute size-full object-cover\"\n                        src={image.src}\n                        alt={image.alt}\n                      />\n                    </div>\n                    <div className=\"relative bg-scheme-1-foreground px-6 pt-6 pb-32 sm:px-8 sm:pt-8\">\n                      <div className=\"w-full max-w-lg\">\n                        <h6 className=\"mb-1 text-md leading-[1.4] font-bold md:text-xl\">\n                          {carouselHeading}\n                        </h6>\n                        <p>{carouselDescription}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </CarouselItem>\n            ))}\n          </CarouselContent>\n          <div className=\"flex items-center justify-between pl-4\">\n            <div className=\"absolute top-auto right-auto bottom-[52px] left-8 flex w-full items-start justify-start\">\n              {images.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => api?.scrollTo(index)}\n                  className={clsx(\"mx-[3px] inline-block size-2 rounded-full\", {\n                    \"bg-scheme-1-text\": current === index + 1,\n                    \"bg-scheme-1-text/20\": current !== index + 1,\n                  })}\n                />\n              ))}\n            </div>\n            <CarouselPrevious className=\"top-auto right-[5.5rem] bottom-2 left-auto size-12 bg-transparent md:right-24\" />\n            <CarouselNext className=\"top-auto right-8 bottom-2 left-auto size-12 bg-transparent\" />\n          </div>\n        </Carousel>\n      </div>\n    </section>\n  );\n};\n\nexport const Header102Defaults: Props = {\n  heading: \"Medium length hero heading goes here\",\n  description:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse varius enim in eros elementum tristique. Duis cursus, mi quis viverra ornare, eros dolor interdum nulla, ut commodo diam libero vitae erat.\",\n  buttons: [{ title: \"Button\" }, { title: \"Button\", variant: \"secondary\" }],\n  images: [\n    {\n      src: \"https://d22po4pjz3o32e.cloudfront.net/placeholder-image.svg\",\n      alt: \"Relume placeholder image 1\",\n    },\n    {\n      src: \"https://d22po4pjz3o32e.cloudfront.net/placeholder-image.svg\",\n      alt: \"Relume placeholder image 2\",\n    },\n    {\n      src: \"https://d22po4pjz3o32e.cloudfront.net/placeholder-image.svg\",\n      alt: \"Relume placeholder image 3\",\n    },\n  ],\n  carouselHeading: \"Short heading goes here\",\n  carouselDescription:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n};\n\nHeader102.displayName = \"Header102\";\n",
      "type": "registry:component"
    },
    {
      "path": "registry/components/gallery21.tsx",
      "content": "\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport {\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselNext,\n  CarouselPrevious,\n} from \"@/components/ui/carousel\";\nimport { type CarouselApi } from \"@/components/ui/carousel\";\nimport clsx from \"clsx\";\n\ntype ImageProps = {\n  src: string;\n  alt?: string;\n};\n\ntype Props = {\n  heading: string;\n  description: string;\n  images: ImageProps[];\n};\n\nexport type Gallery21Props = React.ComponentPropsWithoutRef<\"section\"> &\n  Partial<Props>;\n\nexport const Gallery21 = (props: Gallery21Props) => {\n  const { heading, description, images } = {\n    ...Gallery21Defaults,\n    ...props,\n  };\n\n  const [api, setApi] = useState<CarouselApi>();\n  const [current, setCurrent] = useState(0);\n\n  useEffect(() => {\n    if (!api) {\n      return;\n    }\n    setCurrent(api.selectedScrollSnap() + 1);\n    api.on(\"select\", () => {\n      setCurrent(api.selectedScrollSnap() + 1);\n    });\n  }, [api]);\n\n  return (\n    <section\n      id=\"relume\"\n      className=\"overflow-hidden px-[5%] py-16 md:py-24 lg:py-28\"\n    >\n      <div className=\"container\">\n        <div className=\"rb-12 mb-12 md:mb-18 lg:mb-20\">\n          <h2 className=\"rb-5 mb-5 text-5xl font-bold md:mb-6 md:text-7xl lg:text-8xl\">\n            {heading}\n          </h2>\n          <p className=\"md:text-md\">{description}</p>\n        </div>\n        {/* for all available options: https://www.embla-carousel.com/api/options/ */}\n        <Carousel\n          setApi={setApi}\n          opts={{\n            loop: true,\n            align: \"start\",\n          }}\n        >\n          <CarouselContent className=\"ml-0\">\n            {images.map((image, index) => (\n              <CarouselItem\n                key={index}\n                className=\"basis-full pr-6 pl-0 md:basis-1/2 md:pr-8\"\n              >\n                <img\n                  src={image.src}\n                  alt={image.alt}\n                  className=\"aspect-square size-full rounded-image object-cover\"\n                />\n              </CarouselItem>\n            ))}\n          </CarouselContent>\n          <div className=\"rt-8 mt-8 flex items-center justify-between\">\n            <div className=\"mt-5 flex w-full items-start justify-start\">\n              {images.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => api?.scrollTo(index)}\n                  className={clsx(\"mx-[3px] inline-block size-2 rounded-full\", {\n                    \"bg-scheme-1-text\": current === index + 1,\n                    \"bg-scheme-1-text/20\": current !== index + 1,\n                  })}\n                />\n              ))}\n            </div>\n            <div className=\"flex items-end justify-end gap-2 md:gap-4\">\n              <CarouselPrevious className=\"static top-0 right-0 size-12 -translate-y-0\" />\n              <CarouselNext className=\"static top-0 right-0 size-12 -translate-y-0\" />\n            </div>\n          </div>\n        </Carousel>\n      </div>\n    </section>\n  );\n};\n\nexport const Gallery21Defaults: Props = {\n  heading: \"Image Gallery\",\n  description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n  images: [\n    {\n      src: \"https://d22po4pjz3o32e.cloudfront.net/placeholder-image.svg\",\n      alt: \"Relume placeholder image 1\",\n    },\n    {\n      src: \"https://d22po4pjz3o32e.cloudfront.net/placeholder-image.svg\",\n      alt: \"Relume placeholder image 2\",\n    },\n    {\n      src: \"https://d22po4pjz3o32e.cloudfront.net/placeholder-image.svg\",\n      alt: \"Relume placeholder image 3\",\n    },\n    {\n      src: \"https://d22po4pjz3o32e.cloudfront.net/placeholder-image.svg\",\n      alt: \"Relume placeholder image 4\",\n    },\n  ],\n};\n\nGallery21.displayName = \"Gallery21\";\n",
      "type": "registry:component"
    },
    {
      "path": "registry/components/ui/button.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Slot, Slottable } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"rounded-button inline-flex gap-3 items-center justify-center whitespace-nowrap transition-all duration-200 ease-in-out disabled:pointer-events-none disabled:opacity-50 focus-visible:outline-none\",\n  {\n    variants: {\n      variant: {\n        primary:\n          \"border border-mauve-dark bg-mauve text-white font-medium shadow-[0_3px_0_0_var(--color-mauve-dark)] hover:shadow-none hover:translate-y-[3px]\",\n        secondary:\n          \"border border-neutral-darkest-10 bg-transparent text-black font-medium shadow-[0_3px_0_0_var(--color-neutral-darkest-10)] hover:shadow-none hover:translate-y-[3px]\",\n\n        // Relume defaults\n        \"secondary-alt\":\n          \"border border-border-alternative text-text-alternative\",\n        tertiary: \"text-text-primary\",\n        link: \"border-0 text-text-primary gap-2 bg-transparent\",\n        \"link-alt\": \"border-0 text-text-alternative gap-2\",\n        ghost: \"hover:bg-background-alternative hover:text-text-alternative\",\n      },\n      size: {\n        primary: \"mb-1 py-2.5 px-6\",\n\n        // Relume defaults\n        sm: \"px-5 py-2\",\n        link: \"p-0\",\n        icon: \"size-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"primary\",\n      size: \"primary\",\n    },\n  }\n);\n\ntype CustomProps = {\n  iconLeft?: React.ReactNode;\n  iconRight?: React.ReactNode;\n  asChild?: boolean;\n};\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    CustomProps,\n    VariantProps<typeof buttonVariants> {}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      iconLeft,\n      iconRight,\n      children,\n      asChild = false,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(\n          buttonVariants({\n            variant,\n            size,\n            className,\n          })\n        )}\n        ref={ref}\n        {...props}\n      >\n        {iconLeft && iconLeft}\n        <Slottable>{children}</Slottable>\n        {iconRight && iconRight}\n      </Comp>\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/components/ui/dropdown-menu.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\";\nimport { BiCheck, BiSolidCircle } from \"react-icons/bi\";\nimport { RxChevronRight } from \"react-icons/rx\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst DropdownMenu = DropdownMenuPrimitive.Root;\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group;\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal;\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub;\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean;\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center px-2 py-1.5 outline-none select-none data-[state=open]:bg-scheme-1-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <RxChevronRight className=\"ml-auto size-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n));\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName;\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden border border-scheme-1-border bg-scheme-1-background p-1 text-scheme-1-text data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95\",\n      className\n    )}\n    {...props}\n  />\n));\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName;\n\nconst DropdownMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Trigger> & {\n    children: React.ReactNode;\n    className?: string;\n    asChild?: boolean;\n  }\n>(({ children, className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"cursor-pointer border border-transparent p-2 focus-visible:outline-none\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </DropdownMenuPrimitive.Trigger>\n));\nDropdownMenuTrigger.displayName = DropdownMenuPrimitive.Trigger.displayName;\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 mt-1 min-w-32 overflow-hidden border border-scheme-1-border bg-scheme-1-background p-2 text-scheme-1-text data-[side=bottom]:slide-in-from-bottom-1/2 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[state=open]:duration-300 data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95\",\n\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n));\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    children: React.ReactNode;\n    className?: string;\n    inset?: boolean;\n  }\n>(({ children, className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex items-center rounded-sm px-4 py-2 transition-colors outline-none select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </DropdownMenuPrimitive.Item>\n));\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default items-center py-1.5 pr-2 pl-8 transition-colors outline-none select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex size-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <BiCheck className=\"size-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n));\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName;\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default items-center rounded-sm py-1.5 pr-2 pl-8 transition-colors outline-none select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex size-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <BiSolidCircle className=\"size-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n));\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    children: React.ReactNode;\n    className?: string;\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\"px-4 py-2\", inset && \"pl-8\", className)}\n    {...props}\n  />\n));\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator> & {\n    className?: string;\n  }\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"m-2 h-px bg-neutral-darkest\", className)}\n    {...props}\n  />\n));\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  );\n};\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\";\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n};\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/components/ui/input.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nconst inputVariants = cva(\n  \"rounded-input flex size-full min-h-11 py-2 align-middle transition-all duration-200 file:border-0 file:bg-transparent file:text-sm file:font-medium focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border border-neutral-darkest-15 bg-neutral-darkest-5 text-neutral-black hover:bg-neutral-darkest-15 placeholder:text-neutral-darkest-60\",\n      },\n      size: {\n        default: \"min-h-11 px-3\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\ntype CustomProps = {\n  icon?: React.ReactNode;\n  iconPosition?: \"left\" | \"right\";\n  prefix?: string;\n  prefixPosition?: \"left\" | \"right\";\n};\n\nexport interface InputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\">,\n    CustomProps,\n    VariantProps<typeof inputVariants> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      className,\n      type,\n      icon,\n      iconPosition = \"left\",\n      prefix,\n      prefixPosition = \"left\",\n      variant,\n      size,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div className=\"relative flex w-full items-center\">\n        {icon && iconPosition === \"left\" && (\n          <div className=\"absolute left-3\">{icon}</div>\n        )}\n        {prefix && prefixPosition === \"left\" && (\n          <div className=\"min-h-11 shrink-0 border-y border-l border-border-primary px-3 py-2\">\n            {prefix}\n          </div>\n        )}\n        <input\n          type={type}\n          className={cn(\n            inputVariants({ variant, size }),\n            icon && (iconPosition === \"left\" ? \"pr-3 pl-11\" : \"pr-11 pl-3\"),\n            prefix && \"grow-1\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        />\n        {icon && iconPosition === \"right\" && (\n          <div className=\"absolute right-3\">{icon}</div>\n        )}\n        {prefix && prefixPosition === \"right\" && (\n          <div className=\"min-h-11 shrink-0 border-y border-r border-border-primary px-3 py-2\">\n            {prefix}\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nInput.displayName = \"Input\";\n\nexport { Input };\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/components/ui/carousel.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\";\nimport { BiRightArrowAlt, BiLeftArrowAlt } from \"react-icons/bi\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\n\ntype CarouselApi = UseEmblaCarouselType[1];\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>;\ntype CarouselOptions = UseCarouselParameters[0];\ntype CarouselPlugin = UseCarouselParameters[1];\n\ntype CarouselProps = {\n  opts?: CarouselOptions;\n  plugins?: CarouselPlugin;\n  orientation?: \"horizontal\" | \"vertical\";\n  setApi?: (api: CarouselApi) => void;\n};\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0];\n  api: ReturnType<typeof useEmblaCarousel>[1];\n  scrollPrev: () => void;\n  scrollNext: () => void;\n  canScrollPrev: boolean;\n  canScrollNext: boolean;\n} & CarouselProps;\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null);\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext);\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\");\n  }\n\n  return context;\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    );\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false);\n    const [canScrollNext, setCanScrollNext] = React.useState(false);\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return;\n      }\n\n      setCanScrollPrev(api.canScrollPrev());\n      setCanScrollNext(api.canScrollNext());\n    }, []);\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev();\n    }, [api]);\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext();\n    }, [api]);\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault();\n          scrollPrev();\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault();\n          scrollNext();\n        }\n      },\n      [scrollPrev, scrollNext]\n    );\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return;\n      }\n\n      setApi(api);\n    }, [api, setApi]);\n\n    React.useEffect(() => {\n      if (!api) {\n        return;\n      }\n\n      onSelect(api);\n      api.on(\"reInit\", onSelect);\n      api.on(\"select\", onSelect);\n\n      return () => {\n        api?.off(\"select\", onSelect);\n      };\n    }, [api, onSelect]);\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    );\n  }\n);\nCarousel.displayName = \"Carousel\";\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel();\n\n  return (\n    <div ref={carouselRef}>\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  );\n});\nCarouselContent.displayName = \"CarouselContent\";\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel();\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  );\n});\nCarouselItem.displayName = \"CarouselItem\";\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"secondary\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel();\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute size-14 rounded-full bg-white\",\n        orientation === \"horizontal\"\n          ? \"top-1/2 left-0 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <BiLeftArrowAlt className=\"size-6\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  );\n});\nCarouselPrevious.displayName = \"CarouselPrevious\";\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"secondary\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel();\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute size-14 rounded-full bg-white\",\n        orientation === \"horizontal\"\n          ? \"top-1/2 right-0 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <BiRightArrowAlt className=\"size-6\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  );\n});\nCarouselNext.displayName = \"CarouselNext\";\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n};\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/hooks/use-media-query.ts",
      "content": "import { useState, useEffect, useLayoutEffect } from \"react\";\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n\ntype UseMediaQueryOptions = {\n  defaultValue?: boolean;\n  initializeWithValue?: boolean;\n};\n\nconst IS_SERVER = typeof window === \"undefined\";\n\nexport function useMediaQuery(\n  query: string,\n  {\n    defaultValue = false,\n    initializeWithValue = true,\n  }: UseMediaQueryOptions = {}\n): boolean {\n  const getMatches = (query: string): boolean => {\n    if (IS_SERVER) {\n      return defaultValue;\n    }\n    return window.matchMedia(query).matches;\n  };\n\n  const [matches, setMatches] = useState<boolean>(() => {\n    if (initializeWithValue) {\n      return getMatches(query);\n    }\n    return defaultValue;\n  });\n\n  function handleChange() {\n    setMatches(getMatches(query));\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    const matchMedia = window.matchMedia(query);\n    handleChange();\n\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange);\n    } else {\n      matchMedia.addEventListener(\"change\", handleChange);\n    }\n\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange);\n      } else {\n        matchMedia.removeEventListener(\"change\", handleChange);\n      }\n    };\n  }, [query]);\n\n  return matches;\n}\n",
      "type": "registry:hook"
    },
    {
      "path": "registry/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
      "type": "registry:lib"
    },
    {
      "path": "registry/globals.css",
      "content": "@import url(\"https://fonts.googleapis.com/css2?family=Lexend+Deca:wght@100..900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;800;900&display=swap\");\n\n@import \"tailwindcss\";\n@plugin \"tailwindcss-animate\";\n\n@theme {\n  /* ────────── COLORS ────────── */\n  --color-neutral-white: #ffffff; /* neutral-shade-0 */\n  --color-neutral-lightest: #f2f2f2; /* neutral-shade-1 */\n  --color-neutral-lighter: #d8d8d8; /* neutral-shade-2 */\n  --color-neutral-light: #b2b2b2; /* neutral-shade-3 */\n  --color-neutral: #7f7f7f; /* neutral-shade-4 */\n  --color-neutral-dark: #4c4c4c; /* neutral-shade-5 */\n  --color-neutral-darker: #191919; /* neutral-shade-6 */\n  --color-neutral-darkest: #000000; /* neutral-shade-7 */\n\n  --color-mauve-lightest: #faf4ff; /* chromatic1-shade-1 */\n  --color-mauve-lighter: #f6eaff; /* chromatic1-shade-2 */\n  --color-mauve-light: #dfb8ff; /* chromatic1-shade-3 */\n  --color-mauve: #d29aff; /* chromatic1-shade-4 */\n  --color-mauve-dark: #a87bcc; /* chromatic1-shade-5 */\n  --color-mauve-darker: #543d66; /* chromatic1-shade-6 */\n  --color-mauve-darkest: #3f2e4c; /* chromatic1-shade-7 */\n\n  --color-corvette-lightest: #fef9f4; /* chromatic2-shade-1 */\n  --color-corvette-lighter: #fdf3e9; /* chromatic2-shade-2 */\n  --color-corvette-light: #fad7b4; /* chromatic2-shade-3 */\n  --color-corvette: #f9c795; /* chromatic2-shade-4 */\n  --color-corvette-dark: #c79f77; /* chromatic2-shade-5 */\n  --color-corvette-darker: #634f3b; /* chromatic2-shade-6 */\n  --color-corvette-darkest: #4a3b2c; /* chromatic2-shade-7 */\n\n  --color-carnation-lightest: #fff4f9; /* chromatic3-shade-1 */\n  --color-carnation-lighter: #ffe9f4; /* chromatic3-shade-2 */\n  --color-carnation-light: #ffb3d8; /* chromatic3-shade-3 */\n  --color-carnation: #ff93c8; /* chromatic3-shade-4 */\n  --color-carnation-dark: #cc75a0; /* chromatic3-shade-5 */\n  --color-carnation-darker: #663a50; /* chromatic3-shade-6 */\n  --color-carnation-darkest: #4c2c3c; /* chromatic3-shade-7 */\n\n  --color-transparent: transparent;\n  --color-white-5: color-mix(in srgb, #ffffff, transparent 95%); /* neutral-white-5 */\n  --color-white-10: color-mix(in srgb, #ffffff, transparent 90%); /* neutral-white-10 */\n  --color-white-15: color-mix(in srgb, #ffffff, transparent 85%); /* neutral-white-15 */\n  --color-white-20: color-mix(in srgb, #ffffff, transparent 80%); /* neutral-white-20 */\n  --color-white-30: color-mix(in srgb, #ffffff, transparent 70%); /* neutral-white-30 */\n  --color-white-40: color-mix(in srgb, #ffffff, transparent 60%); /* neutral-white-40 */\n  --color-white-50: color-mix(in srgb, #ffffff, transparent 50%); /* neutral-white-50 */\n  --color-white-60: color-mix(in srgb, #ffffff, transparent 40%); /* neutral-white-60 */\n\n  --color-neutral-darkest-5: color-mix(in srgb, #000000, transparent 95%); /* neutral-shade-7-5 */\n  --color-neutral-darkest-10: color-mix(in srgb, #000000, transparent 90%); /* neutral-shade-7-10 */\n  --color-neutral-darkest-15: color-mix(in srgb, #000000, transparent 85%); /* neutral-shade-7-15 */\n  --color-neutral-darkest-20: color-mix(in srgb, #000000, transparent 80%); /* neutral-shade-7-20 */\n  --color-neutral-darkest-30: color-mix(in srgb, #000000, transparent 70%); /* neutral-shade-7-30 */\n  --color-neutral-darkest-40: color-mix(in srgb, #000000, transparent 60%); /* neutral-shade-7-40 */\n  --color-neutral-darkest-50: color-mix(in srgb, #000000, transparent 50%); /* neutral-shade-7-50 */\n  --color-neutral-darkest-60: color-mix(in srgb, #000000, transparent 40%); /* neutral-shade-7-60 */\n\n  /* ────────── TYPOGRAPHY ────────── */\n  --font-weight-bold: 700; /* --heading-font-weight */\n\n  --text-xs: 0.75rem; /* --text-tiny-font-size */\n  --text-xs--line-height: 1.5; /* --body-line-height */\n\n  --text-sm: 0.875rem; /* --text-small-font-size */\n  --text-sm--line-height: 1.5; /* --body-line-height */\n\n  --text-base: 1rem; /* --text-regular-font-size */\n  --text-base--line-height: 1.5; /* --body-line-height */\n\n  --text-md: 1.125rem; /* --text-medium-font-size */\n  --text-md--line-height: 1.5; /* --body-line-height */\n\n  --text-lg: 1.25rem; /* --text-large-font-size */\n  --text-lg--line-height: 1.5; /* --body-line-height */\n\n  --text-xl: 1.25rem; /* --heading-h6-font-size */\n  --text-xl--line-height: 1.4; /* --heading-h6-line-height */\n  --text-xl--letter-spacing: -0.0125em; /* --heading-h6-letter-spacing */\n\n  --text-2xl: 1.5rem; /* --heading-h5-font-size */\n  --text-2xl--line-height: 1.4; /* --heading-h5-line-height */\n  --text-2xl--letter-spacing: -0.015em; /* --heading-h5-letter-spacing */\n\n  --text-3xl: 1.75rem;\n  --text-3xl--line-height: 1.4;\n\n  --text-4xl: 2rem; /* --heading-h4-font-size */\n  --text-4xl--line-height: 1.3; /* --heading-h4-line-height */\n  --text-4xl--letter-spacing: -0.02em; /* --heading-h4-letter-spacing */\n\n  --text-5xl: 2.25rem;\n  --text-5xl--line-height: 1.3;\n\n  --text-6xl: 2.5rem; /* --heading-h3-font-size */\n  --text-6xl--line-height: 1.2; /* --heading-h3-line-height */\n  --text-6xl--letter-spacing: -0.025em; /* --heading-h3-letter-spacing */\n\n  --text-7xl: 2.75rem;\n  --text-7xl--line-height: 1.2;\n\n  --text-8xl: 3rem; /* --heading-h2-font-size */\n  --text-8xl--line-height: 1.2; /* --heading-h2-line-height */\n  --text-8xl--letter-spacing: -0.03em; /* --heading-h2-letter-spacing */\n\n  --text-9xl: 3.25rem;\n  --text-9xl--line-height: 1.2;\n\n  --text-10xl: 3.5rem; /* --heading-h1-font-size */\n  --text-10xl--line-height: 1.2; /* --heading-h1-line-height */\n  --text-10xl--letter-spacing: -0.035em; /* --heading-h1-letter-spacing */\n\n  /* ────────── UI STYLING ────────── */\n  --radius-button: 2rem; \n  --radius-card: 2rem;\n  --radius-input: min(var(--radius-button), 0.75rem); /* similar to button but last radius equals previous (0, 6px, 12px, 12px) */\n  --radius-badge: var(--radius-button);\n  --radius-image: var(--radius-card);\n\n  /* ────────────────────────────── RELUME DEFAULTS ────────────────────────────── */\n  /* ────────── WIREFRAME COLORS ────────── */\n  --color-background-primary: #ffffff; /* to be changed to `color-scheme-1-background` */\n  --color-background-secondary: #eeeeee; /* to be changed to `color-scheme-1-foreground` */\n  --color-background-alternative: #000000; /* to be discussed */\n\n  --color-border-primary: #000000; /* to be changed to `color-scheme-1-border` */\n  --color-border-alternative: #ffffff; /* to be discussed */\n\n  --color-text-primary: #000000; /* to be changed to `color-scheme-1-text` */\n  --color-text-alternative: #ffffff; /* to be discussed */\n\n  --color-link-primary: #000000; /* to be discussed */\n\n  /* ────────── BREAKPOINTS ────────── */\n  --breakpoint-*: initial;\n  --breakpoint-sm: 480px;\n  --breakpoint-md: 768px;\n  --breakpoint-lg: 992px;\n  --breakpoint-xl: 1280px;\n  --breakpoint-xxl: 1440px;\n\n  /* ────────── CONTAINERS ────────── */\n  --container-*: initial;\n  --container-xxs: 20rem;\n  --container-xs: 25rem;\n  --container-sm: 30rem;\n  --container-md: 35rem;\n  --container-lg: 48rem;\n  --container-xl: 64rem;\n  --container-xxl: 80rem;\n\n  /* ────────── MAX WIDTHS ────────── */\n  --max-w-xxs: var(--container-xxs);\n  --max-w-xs: var(--container-xs);\n  --max-w-sm: var(--container-sm);\n  --max-w-md: var(--container-md);\n  --max-w-lg: var(--container-lg);\n  --max-w-xl: var(--container-xl);\n  --max-w-xxl: var(--container-xxl);\n\n  /* ────────── SPACING ────────── */\n  --spacing-18: 4.5rem;\n  --spacing-30: 7.5rem;\n\n  /* ────────── KEYFRAMES ────────── */\n  @keyframes accordion-down { from { height: 0px; } to { height: var(--radix-accordion-content-height); } }\n  @keyframes accordion-up { from { height: var(--radix-accordion-content-height); } to { height: 0px; } }\n  @keyframes loop-horizontally { from { transform: translateX(0); } to { transform: translateX(-100%); } }\n  @keyframes loop-testimonials { from { transform: translateX(0); } to { transform: translateX(-135rem); } }\n  @keyframes loop-vertically { from { transform: translateY(0); } to { transform: translateY(-50%); } }\n  @keyframes loop-vertically-top { from { transform: translateY(0); } to { transform: translateY(-50%); } }\n  @keyframes loop-vertically-bottom { from { transform: translateY(-50%); } to { transform: translateY(0); } }\n  @keyframes marquee-horizontally { from { transform: translateX(0); } to { transform: translateX(-50%); } }\n  @keyframes marquee-top { from { transform: translateX(0); } to { transform: translateX(-50%); } }\n  @keyframes marquee-right { from { transform: translateX(0); } to { transform: translateX(100%); } }\n  @keyframes marquee-bottom { from { transform: translateX(-50%); } to { transform: translateX(0%); } }\n  @keyframes marquee-left { from { transform: translateX(100%); } to { transform: translateX(0); } }\n  @keyframes tabs { 0% { opacity: 0; } 100% { opacity: 1; } }\n\n  /* ────────── ANIMATIONS ────────── */\n  --animate-accordion-down: accordion-down 0.2s ease-out;\n  --animate-accordion-up: accordion-up 0.2s ease-out;\n  --animate-loop-horizontally: loop-horizontally 20s linear infinite;\n  --animate-loop-testimonials: loop-testimonials 30s linear infinite;\n  --animate-loop-vertically: loop-vertically 30s linear infinite;\n  --animate-loop-vertically-top: loop-vertically-top 50s linear infinite;\n  --animate-loop-vertically-bottom: loop-vertically-bottom 50s linear infinite;\n  --animate-marquee-horizontally: marquee-top 30s linear infinite;\n  --animate-marquee-top: marquee-top 50s linear infinite;\n  --animate-marquee-right: marquee-right 25s linear infinite;\n  --animate-marquee-bottom: marquee-bottom 50s linear infinite;\n  --animate-marquee-left: marquee-left 25s linear infinite;\n  --animate-tabs: tabs 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;\n}\n\n@layer base {\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-family: \"Lexend Deca\", sans-serif; /* --heading-font-family */\n    text-transform: uppercase; /* --heading-text-transform */\n  }\n\n  body {\n    font-family: \"Poppins\", sans-serif; /* --body-font-family */\n  }\n\n  button:not(:disabled),\n  [role=\"button\"]:not(:disabled) {\n    cursor: pointer;\n  }\n}\n\n@utility container {\n  margin-inline: auto;\n  max-width: var(--container-xxl);\n}\n\n@utility no-scrollbar {\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n}",
      "type": "registry:file",
      "target": "~/.globals.css"
    }
  ]
}