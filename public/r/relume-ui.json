{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ui-components",
  "type": "registry:component",
  "title": "UI Components",
  "description": "A set of UI components including Button, Card, and Badge.",
  "files": [
    {
      "type": "registry:file",
      "path": "registry/ui/button.tsx",
      "target": "components/ui/button.tsx",
      "content": "use client\";\n\nimport * as React from \"react\";\nimport { Slot, Slottable } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"../../utils/cn\";\n\nconst buttonVariants = cva(\n  \"rounded-button inline-flex gap-3 items-center justify-center whitespace-nowrap transition-all duration-200 ease-in-out disabled:pointer-events-none disabled:opacity-50 focus-visible:outline-none\",\n  {\n    variants: {\n      variant: {\n        primary: \"border border-border-primary bg-background-alternative text-text-alternative\",\n        secondary: \"border border-border-primary text-text-primary bg-background-primary\",\n        \"secondary-alt\": \"border border-border-alternative text-text-alternative\",\n        tertiary: \"text-text-primary\",\n        link: \"border-0 text-text-primary gap-2 bg-transparent\",\n        \"link-alt\": \"border-0 text-text-alternative gap-2\",\n        ghost: \"hover:bg-background-alternative hover:text-text-alternative\",\n      },\n      size: {\n        primary: \"px-6 py-3\",\n        sm: \"px-5 py-2\",\n        link: \"p-0\",\n        icon: \"size-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"primary\",\n      size: \"primary\",\n    },\n  },\n);\n\ntype CustomProps = {\n  iconLeft?: React.ReactNode;\n  iconRight?: React.ReactNode;\n  asChild?: boolean;\n};\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    CustomProps,\n    VariantProps<typeof buttonVariants> {}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      iconLeft,\n      iconRight,\n      children,\n      asChild = false,\n      ...props\n    },\n    ref,\n  ) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(\n          buttonVariants({\n            variant,\n            size,\n            className,\n          }),\n        )}\n        ref={ref}\n        {...props}\n      >\n        {iconLeft && iconLeft}\n        <Slottable>{children}</Slottable>\n        {iconRight && iconRight}\n      </Comp>\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };"
    },
    {
      "type": "registry:file",
      "path": "registry/ui/card.tsx",
      "target": "components/ui/card.tsx",
      "content": "import * as React from \"react\";\nimport { cn } from \"../../utils/cn\";\n\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nconst cardVariants = cva(\"overflow-hidden rounded-card\", {\n  variants: {\n    variant: {\n      primary: \"border border-border-primary bg-background-primary text-text-primary\",\n      transparent: \"border border-border-alternative bg-transparent text-text-alternative\",\n    },\n  },\n  defaultVariants: {\n    variant: \"primary\",\n  },\n});\n\nexport interface CardProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof cardVariants> {}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  (\n    {\n      className,\n      variant,\n      ...props\n    },\n    ref,\n  ) => (\n    <div\n      ref={ref}\n      className={cn(\n        cardVariants({\n          variant,\n          className,\n        }),\n      )}\n      {...props}\n    />\n  ),\n);\n\nconst BackgroundCard = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"rounded-card overflow-hidden\", className)} {...props} />\n  ),\n);\n\nexport { Card, BackgroundCard };"
    },
    {
      "type": "registry:file",
      "path": "registry/ui/badge.tsx",
      "target": "components/ui/badge.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"../../utils/cn\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-badge px-2 py-1 text-sm font-semibold focus:outline-none\",\n  {\n    variants: {\n      variant: {\n        default: \"border border-transparent bg-background-secondary text-text-primary\",\n        outline: \"border border-border-primary text-text-primary\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div\n      className={cn(\n        badgeVariants({\n          variant,\n        }),\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Badge, badgeVariants };"
    }
  ]
}
