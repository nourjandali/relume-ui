{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "relume",
  "type": "registry:block",
  "description": "A collection of Relume UI components, blocks, and styleguide",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "@radix-ui/react-dialog",
    "react-icons",
    "react"
  ],
  "files": [
    {
      "path": "components/header1.jsx",
      "content": "\"use client\";\n\nimport { Button } from \"@relume_io/relume-ui\";\nimport React from \"react\";\n\nexport function Header1() {\n  return (\n    <section id=\"relume\" className=\"px-[5%] py-16 md:py-24 lg:py-28\">\n      <div className=\"container\">\n        <div className=\"grid grid-cols-1 gap-x-20 gap-y-12 md:gap-y-16 lg:grid-cols-2 lg:items-center\">\n          <div>\n            <h1 className=\"mb-5 text-6xl font-bold md:mb-6 md:text-9xl lg:text-10xl\">\n              Discover Your Favorite Meals at Your Fingertips\n            </h1>\n            <p className=\"md:text-md\">\n              Experience the convenience of ordering your favorite dishes with\n              just a few taps. Our app brings a world of flavors directly to\n              you, making mealtime effortless and enjoyable.\n            </p>\n            <div className=\"mt-6 flex flex-wrap gap-4 md:mt-8\">\n              <Button title=\"Get Started\">Get Started</Button>\n              <Button title=\"Learn More\" variant=\"secondary\">\n                Learn More\n              </Button>\n            </div>\n          </div>\n          <div>\n            <img\n              src=\"https://d22po4pjz3o32e.cloudfront.net/placeholder-image.svg\"\n              className=\"w-full rounded-image object-cover\"\n              alt=\"Relume placeholder image\"\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/header2.jsx",
      "content": "\"use client\";\n\nimport { Button, Input } from \"@relume_io/relume-ui\";\nimport React, { useState } from \"react\";\n\nconst useForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const handleSetEmail = (event) => {\n    setEmail(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log({ email });\n  };\n  return {\n    email,\n    handleSetEmail,\n    handleSubmit,\n  };\n};\n\nexport function Header2() {\n  const formState = useForm();\n  return (\n    <section id=\"relume\" className=\"px-[5%] py-16 md:py-24 lg:py-28\">\n      <div className=\"container\">\n        <div className=\"grid grid-cols-1 gap-x-20 gap-y-12 md:gap-y-16 lg:grid-cols-2 lg:items-center\">\n          <div>\n            <h1 className=\"mb-5 text-6xl font-bold md:mb-6 md:text-9xl lg:text-10xl\">\n              Discover Delicious Meals Right at Your Fingertips\n            </h1>\n            <p className=\"md:text-md\">\n              Explore our extensive menu filled with mouth-watering options.\n              Satisfy your cravings with just a few taps!\n            </p>\n            <div className=\"mt-6 max-w-sm md:mt-8\">\n              <form\n                className=\"rb-4 mb-4 grid max-w-sm grid-cols-1 gap-y-3 sm:grid-cols-[1fr_max-content] sm:gap-4\"\n                onSubmit={formState.handleSubmit}\n              >\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"Subscribe for Updates\"\n                  value={formState.email}\n                  onChange={formState.handleSetEmail}\n                />\n                <Button title=\"Join Now\">Join Now</Button>\n              </form>\n              <p className=\"text-xs\">By clicking Join Now, you</p>\n            </div>\n          </div>\n          <div>\n            <img\n              src=\"https://d22po4pjz3o32e.cloudfront.net/placeholder-image.svg\"\n              className=\"w-full object-cover\"\n              alt=\"Relume placeholder image\"\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/header3.jsx",
      "content": "\"use client\";\n\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTrigger,\n  VideoIframe,\n} from \"@relume_io/relume-ui\";\nimport React from \"react\";\nimport { FaCirclePlay } from \"react-icons/fa6\";\n\nexport function Header3() {\n  return (\n    <section id=\"relume\" className=\"px-[5%] py-16 md:py-24 lg:py-28\">\n      <div className=\"container\">\n        <div className=\"grid grid-cols-1 gap-x-20 gap-y-12 md:gap-y-16 lg:grid-cols-2 lg:items-center\">\n          <div>\n            <h1 className=\"mb-5 text-6xl font-bold md:mb-6 md:text-9xl lg:text-10xl\">\n              Discover Your New Favorite Meal Today!\n            </h1>\n            <p className=\"md:text-md\">\n              Explore our diverse menu featuring mouth-watering burgers and\n              delightful dishes. Your next culinary adventure awaits just a\n              click away!\n            </p>\n            <div className=\"mt-6 flex flex-wrap gap-4 md:mt-8\">\n              <Button title=\"Order\">Order</Button>\n              <Button title=\"Learn More\" variant=\"secondary\">\n                Learn More\n              </Button>\n            </div>\n          </div>\n          <Dialog>\n            <DialogTrigger className=\"relative flex w-full items-center justify-center overflow-hidden rounded-image\">\n              <img\n                src=\"https://d22po4pjz3o32e.cloudfront.net/placeholder-video-thumbnail.svg\"\n                alt=\"Relume placeholder image\"\n                className=\"size-full object-cover\"\n              />\n              <span className=\"absolute inset-0 z-10 bg-black/50\" />\n              <FaCirclePlay className=\"absolute z-20 size-16 text-white\" />\n            </DialogTrigger>\n            <DialogContent>\n              <VideoIframe video=\"https://www.youtube.com/embed/8DKLYsikxTs?si=Ch9W0KrDWWUiCMMW\" />\n            </DialogContent>\n          </Dialog>\n        </div>\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/header4.jsx",
      "content": "\"use client\";\n\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTrigger,\n  Input,\n  VideoIframe,\n} from \"@relume_io/relume-ui\";\nimport React, { useState } from \"react\";\nimport { FaCirclePlay } from \"react-icons/fa6\";\n\nconst useForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const handleSetEmail = (event) => {\n    setEmail(event.target.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log({ email });\n  };\n  return {\n    email,\n    handleSetEmail,\n    handleSubmit,\n  };\n};\n\nexport function Header4() {\n  const formState = useForm();\n  return (\n    <section id=\"relume\" className=\"px-[5%] py-16 md:py-24 lg:py-28\">\n      <div className=\"container\">\n        <div className=\"grid grid-cols-1 gap-x-20 gap-y-12 md:gap-y-16 lg:grid-cols-2 lg:items-center\">\n          <div>\n            <h1 className=\"mb-5 text-6xl font-bold md:mb-6 md:text-9xl lg:text-10xl\">\n              Discover Delicious Meals Delivered to Your Door\n            </h1>\n            <p className=\"md:text-md\">\n              Savor the taste of your favorite dishes with our easy-to-use app.\n              Enjoy quick delivery and a menu filled with mouthwatering options.\n            </p>\n            <div className=\"mt-6 max-w-sm md:mt-8\">\n              <form\n                className=\"rb-4 mb-4 grid max-w-sm grid-cols-1 gap-y-3 sm:grid-cols-[1fr_max-content] sm:gap-4\"\n                onSubmit={formState.handleSubmit}\n              >\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter your email\"\n                  value={formState.email}\n                  onChange={formState.handleSetEmail}\n                />\n                <Button title=\"Sign Up\">Sign Up</Button>\n              </form>\n              <p className=\"text-xs\">\n                By clicking Sign Up you're confirming that you agree with our\n                Terms and Conditions.\n              </p>\n            </div>\n          </div>\n          <Dialog>\n            <DialogTrigger className=\"relative flex w-full items-center justify-center overflow-hidden rounded-image\">\n              <img\n                src=\"https://d22po4pjz3o32e.cloudfront.net/placeholder-video-thumbnail.svg\"\n                alt=\"Relume placeholder image\"\n                className=\"size-full object-cover\"\n              />\n              <span className=\"absolute inset-0 z-10 bg-black/50\" />\n              <FaCirclePlay className=\"absolute z-20 size-16 text-white\" />\n            </DialogTrigger>\n            <DialogContent>\n              <VideoIframe video=\"https://www.youtube.com/embed/8DKLYsikxTs?si=Ch9W0KrDWWUiCMMW\" />\n            </DialogContent>\n          </Dialog>\n        </div>\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "components/header5.jsx",
      "content": "\"use client\";\n\nimport { Button } from \"@relume_io/relume-ui\";\nimport React from \"react\";\n\nexport function Header5() {\n  return (\n    <section id=\"relume\" className=\"relative px-[5%]\">\n      <div className=\"relative z-10 container\">\n        <div className=\"flex max-h-[60rem] min-h-svh items-center py-16 md:py-24 lg:py-28\">\n          <div className=\"max-w-md\">\n            <h1 className=\"mb-5 text-6xl font-bold text-text-alternative md:mb-6 md:text-9xl lg:text-10xl\">\n              Savor Every Bite with Our Delicious Menu\n            </h1>\n            <p className=\"text-text-alternative md:text-md\">\n              Discover a world of flavors at your fingertips. Our app brings\n              your favorite dishes right to your door, making dining effortless\n              and enjoyable.\n            </p>\n            <div className=\"mt-6 flex flex-wrap gap-4 md:mt-8\">\n              <Button title=\"Order\">Order</Button>\n              <Button title=\"Learn More\" variant=\"secondary-alt\">\n                Learn More\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"absolute inset-0 z-0\">\n        <img\n          src=\"https://d22po4pjz3o32e.cloudfront.net/placeholder-image.svg\"\n          className=\"size-full object-cover\"\n          alt=\"Relume placeholder image\"\n        />\n        <div className=\"absolute inset-0 bg-black/50\" />\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "ui/button.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Slot, Slottable } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"rounded-button inline-flex gap-3 items-center justify-center whitespace-nowrap transition-all duration-200 ease-in-out disabled:pointer-events-none disabled:opacity-50 focus-visible:outline-none\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border border-chromatic1-shade-4 bg-chromatic1-shade-4 text-primary-button font-medium hover:bg-chromatic1-shade-5 hover:border-chromatic1-shade-5 primary-alt:border-neutral-shade-7 primary-alt:bg-neutral-shade-7 primary-alt:hover:border-neutral-shade-6 primary-alt:hover:bg-neutral-shade-6\",\n        secondary:\n          \"border border-neutral-shade-7-5 bg-neutral-shade-7-5 font-medium hover:bg-neutral-shade-7-10 alternate:bg-white-10 alternate:border-white-15 alternate:hover:bg-white-15\",\n        \"secondary-alt\":\n          \"border border-border-alternative text-text-alternative\",\n        tertiary: \"text-text-primary\",\n        link: \"border-0 text-text-primary gap-2 bg-transparent\",\n        \"link-alt\": \"border-0 text-text-alternative gap-2\",\n        ghost: \"hover:bg-background-alternative hover:text-text-alternative\",\n      },\n      size: {\n        default: \"py-2.5 px-6\",\n        sm: \"px-5 py-2\",\n        link: \"p-0\",\n        icon: \"size-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\ntype CustomProps = {\n  iconLeft?: React.ReactNode;\n  iconRight?: React.ReactNode;\n  asChild?: boolean;\n};\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    CustomProps,\n    VariantProps<typeof buttonVariants> {}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      iconLeft,\n      iconRight,\n      children,\n      asChild = false,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(\n          buttonVariants({\n            variant,\n            size,\n            className,\n          })\n        )}\n        ref={ref}\n        {...props}\n      >\n        {iconLeft && iconLeft}\n        <Slottable>{children}</Slottable>\n        {iconRight && iconRight}\n      </Comp>\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/input.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nconst inputVariants = cva(\n  \"rounded-input flex size-full min-h-11 py-2 align-middle transition-all duration-200 file:border-0 file:bg-transparent file:text-sm file:font-medium focus-visible:outline-none disabled:cursor-not-allowed disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border border-neutral-darkest-15 bg-neutral-darkest-5 text-neutral-black hover:bg-neutral-darkest-15 placeholder:text-neutral-darkest-60\",\n      },\n      size: {\n        default: \"min-h-11 px-3\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\ntype CustomProps = {\n  icon?: React.ReactNode;\n  iconPosition?: \"left\" | \"right\";\n  prefix?: string;\n  prefixPosition?: \"left\" | \"right\";\n};\n\nexport interface InputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\">,\n    CustomProps,\n    VariantProps<typeof inputVariants> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      className,\n      type,\n      icon,\n      iconPosition = \"left\",\n      prefix,\n      prefixPosition = \"left\",\n      variant,\n      size,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div className=\"relative flex w-full items-center\">\n        {icon && iconPosition === \"left\" && (\n          <div className=\"absolute left-3\">{icon}</div>\n        )}\n        {prefix && prefixPosition === \"left\" && (\n          <div className=\"min-h-11 shrink-0 border-y border-l border-border-primary px-3 py-2\">\n            {prefix}\n          </div>\n        )}\n        <input\n          type={type}\n          className={cn(\n            inputVariants({ variant, size }),\n            icon && (iconPosition === \"left\" ? \"pr-3 pl-11\" : \"pr-11 pl-3\"),\n            prefix && \"grow-1\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        />\n        {icon && iconPosition === \"right\" && (\n          <div className=\"absolute right-3\">{icon}</div>\n        )}\n        {prefix && prefixPosition === \"right\" && (\n          <div className=\"min-h-11 shrink-0 border-y border-r border-border-primary px-3 py-2\">\n            {prefix}\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nInput.displayName = \"Input\";\n\nexport { Input };\n",
      "type": "registry:ui"
    },
    {
      "path": "ui/dialog.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { RxCross2 } from \"react-icons/rx\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport type DialogProps = React.ComponentProps<typeof DialogPrimitive.Root> & {\n  className?: string;\n};\nconst Dialog = DialogPrimitive.Root;\n\ntype DialogTriggerProps = React.ComponentPropsWithoutRef<\n  typeof DialogPrimitive.Trigger\n> & {\n  children?: React.ReactNode;\n  asChild?: boolean;\n  className?: string;\n};\nconst DialogTrigger = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Trigger>,\n  DialogTriggerProps\n>(({ asChild, children, ...props }, ref) => (\n  <DialogPrimitive.Trigger ref={ref} asChild={asChild} {...props}>\n    {children}\n  </DialogPrimitive.Trigger>\n));\nDialogTrigger.displayName = DialogPrimitive.Trigger.displayName;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\ntype DialogCloseProps = React.ComponentPropsWithoutRef<\n  typeof DialogPrimitive.Close\n> & {\n  className?: string;\n};\nconst DialogClose = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Close>,\n  DialogCloseProps\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Close\n    ref={ref}\n    className={cn(\n      \"absolute top-4 right-4 border-none opacity-60 transition-opacity hover:opacity-100 focus-visible:outline-none\",\n      className\n    )}\n    {...props}\n  >\n    <RxCross2 className=\"size-7\" />\n    <span className=\"sr-only\">Close</span>\n  </DialogPrimitive.Close>\n));\nDialogClose.displayName = DialogPrimitive.Close.displayName;\n\ntype DialogOverlayProps = React.ComponentPropsWithoutRef<\n  typeof DialogPrimitive.Overlay\n> & {\n  className?: string;\n  showCloseIcon?: boolean;\n  closeIconClassName?: string;\n};\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  DialogOverlayProps\n>(({ className, showCloseIcon = true, closeIconClassName, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:animate-in data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  >\n    {showCloseIcon && (\n      <DialogClose className={cn(\"text-white\", closeIconClassName)} />\n    )}\n  </DialogPrimitive.Overlay>\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\ntype DialogContentProps = React.ComponentPropsWithoutRef<\n  typeof DialogPrimitive.Content\n> & {\n  overlayClassName?: string;\n  closeIconClassName?: string;\n  closeIconPosition?: \"inside\" | \"outside\";\n};\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  DialogContentProps\n>(\n  (\n    {\n      className,\n      children,\n      closeIconPosition = \"outside\",\n      closeIconClassName,\n      overlayClassName,\n      ...props\n    },\n    ref\n  ) => (\n    <DialogPortal>\n      <DialogOverlay\n        className={cn(\"bg-neutral-darkest/90\", overlayClassName)}\n        showCloseIcon={closeIconPosition === \"outside\"}\n        closeIconClassName={closeIconClassName}\n      />\n      <DialogPrimitive.Content\n        ref={ref}\n        className={cn(\n          \"fixed top-1/2 left-1/2 z-50 grid w-full -translate-x-1/2 -translate-y-1/2\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        {closeIconPosition === \"inside\" && (\n          <DialogClose\n            className={cn(\"text-neutral-darkest\", closeIconClassName)}\n          />\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n);\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n);\nDialogHeader.displayName = \"DialogHeader\";\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col items-center justify-center space-x-1 sm:flex-row sm:justify-end\",\n      className\n    )}\n    {...props}\n  />\n);\nDialogFooter.displayName = \"DialogFooter\";\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-2xl leading-none font-semibold tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-text-secondary text-md\", className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n};\n",
      "type": "registry:ui"
    },
    {
      "path": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
      "type": "registry:lib"
    },
    {
      "path": "globals.css",
      "content": "@import url(\"https://fonts.googleapis.com/css2?family=Lexend+Deca:wght@100..900&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;800;900&display=swap\");\n\n@import \"tailwindcss\";\n@plugin \"tailwindcss-animate\";\n\n@theme {\n  /* ────────── COLORS ────────── */\n  --color-neutral-white: #ffffff; /* neutral-shade-0 */\n  --color-neutral-lightest: #f2f2f2; /* neutral-shade-1 */\n  --color-neutral-lighter: #d8d8d8; /* neutral-shade-2 */\n  --color-neutral-light: #b2b2b2; /* neutral-shade-3 */\n  --color-neutral: #7f7f7f; /* neutral-shade-4 */\n  --color-neutral-dark: #4c4c4c; /* neutral-shade-5 */\n  --color-neutral-darker: #191919; /* neutral-shade-6 */\n  --color-neutral-darkest: #000000; /* neutral-shade-7 */\n\n  --color-mauve-lightest: #faf4ff; /* chromatic1-shade-1 */\n  --color-mauve-lighter: #f6eaff; /* chromatic1-shade-2 */\n  --color-mauve-light: #dfb8ff; /* chromatic1-shade-3 */\n  --color-mauve: #d29aff; /* chromatic1-shade-4 */\n  --color-mauve-dark: #a87bcc; /* chromatic1-shade-5 */\n  --color-mauve-darker: #543d66; /* chromatic1-shade-6 */\n  --color-mauve-darkest: #3f2e4c; /* chromatic1-shade-7 */\n\n  --color-corvette-lightest: #fef9f4; /* chromatic2-shade-1 */\n  --color-corvette-lighter: #fdf3e9; /* chromatic2-shade-2 */\n  --color-corvette-light: #fad7b4; /* chromatic2-shade-3 */\n  --color-corvette: #f9c795; /* chromatic2-shade-4 */\n  --color-corvette-dark: #c79f77; /* chromatic2-shade-5 */\n  --color-corvette-darker: #634f3b; /* chromatic2-shade-6 */\n  --color-corvette-darkest: #4a3b2c; /* chromatic2-shade-7 */\n\n  --color-carnation-lightest: #fff4f9; /* chromatic3-shade-1 */\n  --color-carnation-lighter: #ffe9f4; /* chromatic3-shade-2 */\n  --color-carnation-light: #ffb3d8; /* chromatic3-shade-3 */\n  --color-carnation: #ff93c8; /* chromatic3-shade-4 */\n  --color-carnation-dark: #cc75a0; /* chromatic3-shade-5 */\n  --color-carnation-darker: #663a50; /* chromatic3-shade-6 */\n  --color-carnation-darkest: #4c2c3c; /* chromatic3-shade-7 */\n\n  --color-transparent: transparent;\n  --color-white-5: color-mix(in srgb, #ffffff, transparent 95%); /* neutral-white-5 */\n  --color-white-10: color-mix(in srgb, #ffffff, transparent 90%); /* neutral-white-10 */\n  --color-white-15: color-mix(in srgb, #ffffff, transparent 85%); /* neutral-white-15 */\n  --color-white-20: color-mix(in srgb, #ffffff, transparent 80%); /* neutral-white-20 */\n  --color-white-30: color-mix(in srgb, #ffffff, transparent 70%); /* neutral-white-30 */\n  --color-white-40: color-mix(in srgb, #ffffff, transparent 60%); /* neutral-white-40 */\n  --color-white-50: color-mix(in srgb, #ffffff, transparent 50%); /* neutral-white-50 */\n  --color-white-60: color-mix(in srgb, #ffffff, transparent 40%); /* neutral-white-60 */\n\n  --color-neutral-darkest-5: color-mix(in srgb, #000000, transparent 95%); /* neutral-shade-7-5 */\n  --color-neutral-darkest-10: color-mix(in srgb, #000000, transparent 90%); /* neutral-shade-7-10 */\n  --color-neutral-darkest-15: color-mix(in srgb, #000000, transparent 85%); /* neutral-shade-7-15 */\n  --color-neutral-darkest-20: color-mix(in srgb, #000000, transparent 80%); /* neutral-shade-7-20 */\n  --color-neutral-darkest-30: color-mix(in srgb, #000000, transparent 70%); /* neutral-shade-7-30 */\n  --color-neutral-darkest-40: color-mix(in srgb, #000000, transparent 60%); /* neutral-shade-7-40 */\n  --color-neutral-darkest-50: color-mix(in srgb, #000000, transparent 50%); /* neutral-shade-7-50 */\n  --color-neutral-darkest-60: color-mix(in srgb, #000000, transparent 40%); /* neutral-shade-7-60 */\n\n  /* ────────── TYPOGRAPHY ────────── */\n  --font-weight-bold: 700; /* --heading-font-weight */\n\n  --text-xs: 0.75rem; /* --text-tiny-font-size */\n  --text-xs--line-height: 1.5; /* --body-line-height */\n\n  --text-sm: 0.875rem; /* --text-small-font-size */\n  --text-sm--line-height: 1.5; /* --body-line-height */\n\n  --text-base: 1rem; /* --text-regular-font-size */\n  --text-base--line-height: 1.5; /* --body-line-height */\n\n  --text-md: 1.125rem; /* --text-medium-font-size */\n  --text-md--line-height: 1.5; /* --body-line-height */\n\n  --text-lg: 1.25rem; /* --text-large-font-size */\n  --text-lg--line-height: 1.5; /* --body-line-height */\n\n  --text-xl: 1.25rem; /* --heading-h6-font-size */\n  --text-xl--line-height: 1.4; /* --heading-h6-line-height */\n  --text-xl--letter-spacing: -0.0125em; /* --heading-h6-letter-spacing */\n\n  --text-2xl: 1.5rem; /* --heading-h5-font-size */\n  --text-2xl--line-height: 1.4; /* --heading-h5-line-height */\n  --text-2xl--letter-spacing: -0.015em; /* --heading-h5-letter-spacing */\n\n  --text-3xl: 1.75rem;\n  --text-3xl--line-height: 1.4;\n\n  --text-4xl: 2rem; /* --heading-h4-font-size */\n  --text-4xl--line-height: 1.3; /* --heading-h4-line-height */\n  --text-4xl--letter-spacing: -0.02em; /* --heading-h4-letter-spacing */\n\n  --text-5xl: 2.25rem;\n  --text-5xl--line-height: 1.3;\n\n  --text-6xl: 2.5rem; /* --heading-h3-font-size */\n  --text-6xl--line-height: 1.2; /* --heading-h3-line-height */\n  --text-6xl--letter-spacing: -0.025em; /* --heading-h3-letter-spacing */\n\n  --text-7xl: 2.75rem;\n  --text-7xl--line-height: 1.2;\n\n  --text-8xl: 3rem; /* --heading-h2-font-size */\n  --text-8xl--line-height: 1.2; /* --heading-h2-line-height */\n  --text-8xl--letter-spacing: -0.03em; /* --heading-h2-letter-spacing */\n\n  --text-9xl: 3.25rem;\n  --text-9xl--line-height: 1.2;\n\n  --text-10xl: 3.5rem; /* --heading-h1-font-size */\n  --text-10xl--line-height: 1.2; /* --heading-h1-line-height */\n  --text-10xl--letter-spacing: -0.035em; /* --heading-h1-letter-spacing */\n\n  /* ────────── UI STYLING ────────── */\n  --radius-button: 2rem; \n  --radius-card: 2rem;\n  --radius-input: min(var(--radius-button), 0.75rem); /* similar to button but last radius equals previous (0, 6px, 12px, 12px) */\n  --radius-badge: var(--radius-button);\n  --radius-image: var(--radius-card);\n\n  /* ────────────────────────────── RELUME DEFAULTS ────────────────────────────── */\n  /* ────────── WIREFRAME COLORS ────────── */\n  --color-background-primary: #ffffff; /* to be changed to `color-scheme-1-background` */\n  --color-background-secondary: #eeeeee; /* to be changed to `color-scheme-1-foreground` */\n  --color-background-alternative: #000000; /* to be discussed */\n\n  --color-border-primary: #000000; /* to be changed to `color-scheme-1-border` */\n  --color-border-alternative: #ffffff; /* to be discussed */\n\n  --color-text-primary: #000000; /* to be changed to `color-scheme-1-text` */\n  --color-text-alternative: #ffffff; /* to be discussed */\n\n  --color-link-primary: #000000; /* to be discussed */\n\n  /* ────────── BREAKPOINTS ────────── */\n  --breakpoint-*: initial;\n  --breakpoint-sm: 480px;\n  --breakpoint-md: 768px;\n  --breakpoint-lg: 992px;\n  --breakpoint-xl: 1280px;\n  --breakpoint-xxl: 1440px;\n\n  /* ────────── CONTAINERS ────────── */\n  --container-*: initial;\n  --container-xxs: 20rem;\n  --container-xs: 25rem;\n  --container-sm: 30rem;\n  --container-md: 35rem;\n  --container-lg: 48rem;\n  --container-xl: 64rem;\n  --container-xxl: 80rem;\n\n  /* ────────── MAX WIDTHS ────────── */\n  --max-w-xxs: var(--container-xxs);\n  --max-w-xs: var(--container-xs);\n  --max-w-sm: var(--container-sm);\n  --max-w-md: var(--container-md);\n  --max-w-lg: var(--container-lg);\n  --max-w-xl: var(--container-xl);\n  --max-w-xxl: var(--container-xxl);\n\n  /* ────────── SPACING ────────── */\n  --spacing-18: 4.5rem;\n  --spacing-30: 7.5rem;\n\n  /* ────────── KEYFRAMES ────────── */\n  @keyframes accordion-down { from { height: 0px; } to { height: var(--radix-accordion-content-height); } }\n  @keyframes accordion-up { from { height: var(--radix-accordion-content-height); } to { height: 0px; } }\n  @keyframes loop-horizontally { from { transform: translateX(0); } to { transform: translateX(-100%); } }\n  @keyframes loop-testimonials { from { transform: translateX(0); } to { transform: translateX(-135rem); } }\n  @keyframes loop-vertically { from { transform: translateY(0); } to { transform: translateY(-50%); } }\n  @keyframes loop-vertically-top { from { transform: translateY(0); } to { transform: translateY(-50%); } }\n  @keyframes loop-vertically-bottom { from { transform: translateY(-50%); } to { transform: translateY(0); } }\n  @keyframes marquee-horizontally { from { transform: translateX(0); } to { transform: translateX(-50%); } }\n  @keyframes marquee-top { from { transform: translateX(0); } to { transform: translateX(-50%); } }\n  @keyframes marquee-right { from { transform: translateX(0); } to { transform: translateX(100%); } }\n  @keyframes marquee-bottom { from { transform: translateX(-50%); } to { transform: translateX(0%); } }\n  @keyframes marquee-left { from { transform: translateX(100%); } to { transform: translateX(0); } }\n  @keyframes tabs { 0% { opacity: 0; } 100% { opacity: 1; } }\n\n  /* ────────── ANIMATIONS ────────── */\n  --animate-accordion-down: accordion-down 0.2s ease-out;\n  --animate-accordion-up: accordion-up 0.2s ease-out;\n  --animate-loop-horizontally: loop-horizontally 20s linear infinite;\n  --animate-loop-testimonials: loop-testimonials 30s linear infinite;\n  --animate-loop-vertically: loop-vertically 30s linear infinite;\n  --animate-loop-vertically-top: loop-vertically-top 50s linear infinite;\n  --animate-loop-vertically-bottom: loop-vertically-bottom 50s linear infinite;\n  --animate-marquee-horizontally: marquee-top 30s linear infinite;\n  --animate-marquee-top: marquee-top 50s linear infinite;\n  --animate-marquee-right: marquee-right 25s linear infinite;\n  --animate-marquee-bottom: marquee-bottom 50s linear infinite;\n  --animate-marquee-left: marquee-left 25s linear infinite;\n  --animate-tabs: tabs 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;\n}\n\n@layer base {\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-family: \"Lexend Deca\", sans-serif; /* --heading-font-family */\n    text-transform: uppercase; /* --heading-text-transform */\n  }\n\n  body {\n    font-family: \"Poppins\", sans-serif; /* --body-font-family */\n  }\n\n  button:not(:disabled),\n  [role=\"button\"]:not(:disabled) {\n    cursor: pointer;\n  }\n}\n\n@utility container {\n  margin-inline: auto;\n  max-width: var(--container-xxl);\n}\n\n@utility no-scrollbar {\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n}",
      "type": "registry:file",
      "target": "globals.css"
    }
  ]
}