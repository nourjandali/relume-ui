{
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "accordion",
    "type": "registry:ui",
    "title": "Accordion Component",
    "description": "A simple accordion component.",
    "dependencies": [
      "@radix-ui/react-accordion",
      "react-icons"
    ],
    "files": [
      {
        "path": "ui/accordion.tsx",
        "target": "components/ui/accordion.tsx",
        "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\";\nimport { RxChevronDown } from \"react-icons/rx\";\n\nimport { cn } from \"@/lib/utils\";\n\ntype AccordionProps = React.ComponentPropsWithoutRef<\n  typeof AccordionPrimitive.Root\n> & {\n  type?: \"single\" | \"multiple\";\n  children: React.ReactNode;\n  className?: string;\n};\n\nconst Accordion = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Root>,\n  AccordionProps\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Root ref={ref} className={cn(className)} {...props}>\n    {children}\n  </AccordionPrimitive.Root>\n));\nAccordion.displayName = AccordionPrimitive.Root.displayName;\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b border-border-primary first:border-t\", className)}\n    {...props}\n  />\n));\nAccordionItem.displayName = \"AccordionItem\";\n\ntype AccordionTriggerProps = React.ComponentPropsWithoutRef<\n  typeof AccordionPrimitive.Trigger\n> & {\n  className?: string;\n  children: React.ReactNode;\n  icon?: React.ReactNode;\n};\nconst defaultIcon = (\n  <RxChevronDown className=\"size-7 shrink-0 text-text-primary transition-transform duration-300 md:size-8\" />\n);\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  AccordionTriggerProps\n>(({ className, children, icon = defaultIcon, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex w-full\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-bold transition-all focus-visible:outline-none focus-visible:ring-0 [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      {icon}\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n));\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName;\n\ntype AccordionContentProps = React.ComponentPropsWithoutRef<\n  typeof AccordionPrimitive.Content\n> & {\n  children: React.ReactNode;\n};\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  AccordionContentProps & { className?: string }\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-5\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n));\nAccordionContent.displayName = AccordionPrimitive.Content.displayName;\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent };",
        "type": "registry:ui"
      }
    ]
  }